version: 2.1

working_directory: &working_directory ~/app

executors:
  default:
    parameters:
      version:
        description: 'version tag'
        default: '16.13.0-browsers'
        type: string
    docker:
      - image: cimg/node:<<parameters.version>>
        environment:
          JOBS: 2
    working_directory: *working_directory

aliases: &attach_working_directory
  attach_workspace:
    at: *working_directory

commands:
  configure_git:
    steps:
      - run:
          name: Configure GIT
          command: |
            git config --global -l
            git config --global user.email dev@bankfacil.com.br
            git config --global user.name RoboBankFacil

  restore_packages:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache 📁
          keys:
            - yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v3-{{ .Branch }}-
            - yarn-packages-v3-

  save_packages:
    steps:
      - save_cache:
          name: Save Yarn Package Cache 📁
          key: yarn-packages-v3-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  authenticate_with_registry:
    steps:
      - run:
          name: Authenticate with registry 🔐
          command: |
            echo "@creditas:registry=https://creditas.jfrog.io/creditas/api/npm/npm/
            //creditas.jfrog.io/creditas/api/npm/npm/:_authToken=$NPM_TOKEN
            @creditas-ui:registry=https://creditas.jfrog.io/creditas/api/npm/npm/" > ~/.npmrc

  install_packages:
    steps:
      - run:
          name: Install project dependencies 📦
          command: yarn install --frozen-lockfile

  lint:
    steps:
      - run:
          name: Lint
          command: yarn lint

  test:
    steps:
      - run:
          name: Test
          command: yarn test:ci

  check_format:
    steps:
      - run:
          name: Check Format
          command: yarn check-format

  check_types:
    steps:
      - run:
          name: Check Types
          command: yarn check-types

  build:
    steps:
      - run:
          name: Build
          command: yarn build

jobs:
  install_app:
    executor: default
    steps:
      - checkout
      - restore_packages
      - authenticate_with_registry
      - install_packages
      - save_packages
      - configure_git
      - *attach_working_directory
      - persist_to_workspace:
          root: *working_directory
          paths:
            - node_modules

  semantic_release:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - configure_git
      - add_ssh_keys: &add_ssh_keys
          fingerprints:
            - 'd6:8b:d0:93:2f:20:1f:58:74:0c:cd:fe:83:48:50:fd'
      - authenticate_with_registry
      - run:
          name: Semantic Release 🚀
          command: yarn semantic-release

  lint:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - lint

  check_format:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - check_format

  check_types:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - check_types

  test:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - test

  build:
    executor: default
    steps:
      - checkout
      - *attach_working_directory
      - build
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist
            - node_modules

workflows:
  version: 2.1

  build_test_release:
    jobs:
      - install_app:
          context: artifactory-dependency-install

      - lint:
          requires:
            - install_app

      - check_format:
          requires:
            - install_app

      - check_types:
          requires:
            - install_app

      - test:
          requires:
            - install_app

      - build:
          requires:
            - install_app

      - semantic_release:
          context: artifactory-credentials
          requires:
            - lint
            - check_format
            - check_types
            - test
            - build
